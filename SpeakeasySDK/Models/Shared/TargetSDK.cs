
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace SpeakeasySDK.Models.Shared
{
    using Newtonsoft.Json;
    using System;
    
    public class TargetSDK
    {

        /// <summary>
        /// Remote commit ID.
        /// </summary>
        [JsonProperty("commit_head")]
        public string? CommitHead { get; set; }

        /// <summary>
        /// Name of the CI environment.
        /// </summary>
        [JsonProperty("continuous_integration_environment")]
        public string? ContinuousIntegrationEnvironment { get; set; }

        /// <summary>
        /// Version of the generated target (post generation)
        /// </summary>
        [JsonProperty("generate_config_post_version")]
        public string? GenerateConfigPostVersion { get; set; }

        /// <summary>
        /// gen.lock ID (expected to be a uuid). The same as `id`. A unique identifier for the target.
        /// </summary>
        [JsonProperty("generate_gen_lock_id")]
        public string GenerateGenLockId { get; set; } = default!;

        /// <summary>
        /// Features prior to generation
        /// </summary>
        [JsonProperty("generate_gen_lock_pre_features")]
        public string? GenerateGenLockPreFeatures { get; set; }

        /// <summary>
        /// Artifact version for the Previous Generation
        /// </summary>
        [JsonProperty("generate_gen_lock_pre_version")]
        public string? GenerateGenLockPreVersion { get; set; }

        /// <summary>
        /// Indicates whether the target was considered published.
        /// </summary>
        [JsonProperty("generate_published")]
        public bool? GeneratePublished { get; set; }

        /// <summary>
        /// eg `typescript`, `terraform`, `python`
        /// </summary>
        [JsonProperty("generate_target")]
        public string GenerateTarget { get; set; } = default!;

        /// <summary>
        /// The name of the target as defined by the user.
        /// </summary>
        [JsonProperty("generate_target_name")]
        public string? GenerateTargetName { get; set; }

        /// <summary>
        /// The version of the Speakeasy generator for this target eg v2 of the typescript generator.
        /// </summary>
        [JsonProperty("generate_target_version")]
        public string? GenerateTargetVersion { get; set; }

        /// <summary>
        /// GitHub organization of the action.
        /// </summary>
        [JsonProperty("gh_action_organization")]
        public string? GhActionOrganization { get; set; }

        /// <summary>
        /// GitHub repository of the action.
        /// </summary>
        [JsonProperty("gh_action_repository")]
        public string? GhActionRepository { get; set; }

        /// <summary>
        /// Link to the GitHub action run.
        /// </summary>
        [JsonProperty("gh_action_run_link")]
        public string? GhActionRunLink { get; set; }

        /// <summary>
        /// Version of the GitHub action.
        /// </summary>
        [JsonProperty("gh_action_version")]
        public string? GhActionVersion { get; set; }

        /// <summary>
        /// Current working directory relative to the git root.
        /// </summary>
        [JsonProperty("git_relative_cwd")]
        public string? GitRelativeCwd { get; set; }

        /// <summary>
        /// Default owner for git remote.
        /// </summary>
        [JsonProperty("git_remote_default_owner")]
        public string? GitRemoteDefaultOwner { get; set; }

        /// <summary>
        /// Default repository name for git remote.
        /// </summary>
        [JsonProperty("git_remote_default_repo")]
        public string? GitRemoteDefaultRepo { get; set; }

        /// <summary>
        /// User email from git configuration.
        /// </summary>
        [JsonProperty("git_user_email")]
        public string? GitUserEmail { get; set; }

        /// <summary>
        /// User&apos;s name from git configuration. (not GitHub username)
        /// </summary>
        [JsonProperty("git_user_name")]
        public string? GitUserName { get; set; }

        /// <summary>
        /// Remote hostname.
        /// </summary>
        [JsonProperty("hostname")]
        public string? Hostname { get; set; }

        /// <summary>
        /// Unique identifier of the target the same as `generate_gen_lock_id`
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; } = default!;

        /// <summary>
        /// Timestamp when the event was created in the database.
        /// </summary>
        [JsonProperty("last_event_created_at")]
        public DateTime LastEventCreatedAt { get; set; } = default!;

        /// <summary>
        /// Unique identifier of the last event for the target
        /// </summary>
        [JsonProperty("last_event_id")]
        public string LastEventId { get; set; } = default!;

        /// <summary>
        /// Type of interaction.
        /// </summary>
        [JsonProperty("last_event_interaction_type")]
        public InteractionType LastEventInteractionType { get; set; } = default!;

        /// <summary>
        /// Label of the git repository.
        /// </summary>
        [JsonProperty("repo_label")]
        public string? RepoLabel { get; set; }

        /// <summary>
        /// Indicates whether the event was successful.
        /// </summary>
        [JsonProperty("success")]
        public bool? Success { get; set; }
    }
}